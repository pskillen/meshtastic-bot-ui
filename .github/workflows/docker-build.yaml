name: docker-build-and-push

on:
  workflow_call:
    inputs:
      VERSION_LABEL:
        required: true
        type: string
      ENVIRONMENT:
        required: true
        type: string

permissions:
  contents: read
  packages: write

jobs:
  extract-tag:
    runs-on: ubuntu-latest

    outputs:
      LATEST_TAG: ${{ steps.set_tags.outputs.LATEST_TAG }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup vars
        id: set_tags
        run: |
          PLATFORM_TAG=$(echo "${{ matrix.platform }}" | sed 's|/|-|g')
          echo "PLATFORM_TAG=$PLATFORM_TAG" >> $GITHUB_ENV
          if [[ "${{ inputs.ENVIRONMENT }}" == "dev" ]]; then
            LATEST_TAG=latest-dev
          elif [[ "${{ inputs.ENVIRONMENT }}" == "preprod" ]]; then
            LATEST_TAG=latest-rc
          elif [[ "${{ inputs.ENVIRONMENT }}" == "prod" ]]; then
            LATEST_TAG=latest
          else
            LATEST_TAG=
          fi
          echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_ENV
          echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_OUTPUT

  build:
    needs:
      - extract-tag
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:${{ needs.extract-tag.outputs.LATEST_TAG }}
          build-args: |
            VERSION=${{ inputs.VERSION_LABEL }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
